=== Git sa Bash

(((bash)))(((tab completion, bash)))(((shell prompts, bash)))
Kung ikaw ay isang Bash na manggagamit, maaari mong gamitin ang iilan sa iyong mga katangian ng shell para gawing mas kaaya-aya ang karanasan sa Git.
Sa totoo lang ang Git ay may mga plugin para sa iilang mga shell, nguit ito ay di-pinagana bilang default.

Una, kailangan mong kumuha ng kopya ng `contrib/completion/git-completion.bash` na file palabas sa Git na source code.
Kopyahin ito sa isang lugar na nakagawian mo na, kagaya ng direktoryong home, at idagdag ito sa iyong `.bashrc`:

[source,console]
-----
. ~/git-completion.bash
-----

Kapag natapos na iyan, baguhin ang iyong direktoryo sa isang Git na repositoryo, at makinilyahin ang:

[source,console]
----
$ git chec<tab>
----

â€¦at ang Bash ay awtomatikong kumpletohin sa `git checkout`.
Ito ay gagana sa lahat ng mga subcommand ng Git, mga sadyansukat ng command-line, at mga remote at mga pangalan ng ref kung saan naaangkop.

It's also useful to customize your prompt to show information about the current directory's Git repository.

This can be as simple or complex as you want, but there are generally a few key pieces of information that most people want, like the current branch, and the status of the working directory.
To add these to your prompt, just copy the `contrib/completion/git-prompt.sh` file from Git's source repository to your home directory, add something like this to your `.bashrc`:

[source,console]
-----
. ~/git-prompt.sh
export GIT_PS1_SHOWDIRTYSTATE=1
export PS1='\w$(__git_ps1 " (%s)")\$ '
-----

The `\w` means print the current working directory, the `\$` prints the `$` part of the prompt, and `__git_ps1 " (%s)"` calls the function provided by `git-prompt.sh` with a formatting argument.
Now your bash prompt will look like this when you're anywhere inside a Git-controlled project:

.Customized `bash` prompt.
image::images/git-bash.png[Customized `bash` prompt.]

Both of these scripts come with helpful documentation; take a look at the contents of `git-completion.bash` and `git-prompt.sh` for more information.
